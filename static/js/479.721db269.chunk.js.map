{"version":3,"file":"static/js/479.721db269.chunk.js","mappings":"iNASA,EATmB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrC,OACE,kBAAMD,SAAUA,EAAUE,MAAO,CAAEC,QAAS,UAA5C,WACE,kBAAOC,KAAK,OAAOC,KAAMN,EAAOE,SAAUA,KAC1C,mBAAQG,KAAK,SAAb,sBAGL,E,oCCaD,EAjBuB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACxB,OACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,aACf,yBACE,SAAC,KAAD,CACEN,MAAO,CAAEO,OAAQ,SAAUC,QAAS,SACpCC,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,MAAkB,CAAEC,QAASN,EAAMO,KAFtD,mBAIGP,EAAMQ,aAJT,QAIkBR,EAAMH,QALjBG,EAAMO,GADA,KAYtB,EC6BD,EAzCe,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,IAEnDC,EAAAA,EAAAA,YAAU,WACU,KAAdF,IAEJG,EAAAA,EAAAA,IAAkBH,GAAWI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACnCT,EAAUS,EAAKC,QAChB,GACF,GAAE,CAACN,IAUJO,QAAQC,IAAIxB,GAOZ,OACE,iCACE,SAAC,EAAD,CACEP,MAAOuB,EACPtB,SAnBe,SAAA+B,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBL,QAAQC,IAAIG,EAAKE,SAAS,GAAGpC,OAC7BsB,EAAgB,CAAEC,UAAWW,EAAKE,SAAS,GAAGpC,QAC9CkC,EAAKG,OACN,EAcKnC,SAVoB,SAAAoC,GAExBhB,EAD6B,KAAVgB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAUI/B,IAAU,SAAC,EAAD,CAAgBA,OAAQA,MAGxC,C,oKC3CKgC,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,qCAAkDC,GAC1D,EAEYG,EAAiB,SAAA3B,GAC5B,OAAO0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,EAA/B,oBAA6CwB,GACrD,EAEYI,EAAqB,SAAA5B,GAChC,OAAO0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,EAA/B,4BAAqDwB,GAC7D,EAEYK,EAAwB,SAAA7B,GACnC,OAAO0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,EAA/B,4BAAqDwB,GAC7D,EAEYd,EAAoB,SAAAY,GAC/B,OAAOI,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,kBACgDF,GAExD,C","sources":["components/SearchForm.jsx","components/SelectedMovies/SelectedMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["const SearchForm = ({ value, onSubmit, onChange }) => {\n  return (\n    <form onSubmit={onSubmit} style={{ padding: '18px 0' }}>\n      <input type=\"text\" name={value} onChange={onChange}></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { Link, generatePath } from 'react-router-dom';\nimport { PAGE_NAMES } from 'router/paths';\n\nconst SelectedMovies = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            style={{ margin: '10px 0', display: 'block' }}\n            to={generatePath(PAGE_NAMES.movie, { movieId: movie.id })}\n          >\n            {movie.title ?? movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SelectedMovies;\n","import { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport { fetchMovieByQuery } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport SelectedMovies from 'components/SelectedMovies/SelectedMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    fetchMovieByQuery(movieName).then(({ data }) => {\n      setMovies(data.results);\n    });\n  }, [movieName]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    console.log(form.elements[0].value);\n    setSearchParams({ movieName: form.elements[0].value });\n    form.reset();\n  };\n\n  console.log(movies);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchForm\n        value={movieName}\n        onSubmit={handleSubmit}\n        onChange={updateQueryString}\n      />\n\n      {movies && <SelectedMovies movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cda61bda9f0a12d6d66e74a80f877dd6';\n\nexport const fetchMoviesList = () => {\n  return axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCastById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviewsById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n};\n"],"names":["value","onSubmit","onChange","style","padding","type","name","movies","map","movie","margin","display","to","generatePath","PAGE_NAMES","movieId","id","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovieByQuery","then","data","results","console","log","evt","preventDefault","form","currentTarget","elements","reset","query","BASE_URL","API_KEY","fetchMoviesList","axios","fetchMovieById","fetchMovieCastById","fetchMovieReviewsById"],"sourceRoot":""}